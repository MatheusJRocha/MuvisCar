"""Altera coluna cpf para cpf_cnpj

Revision ID: 6ec65aa638d0
Revises: 
Create Date: 2025-08-06 10:56:11.865742

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6ec65aa638d0'
down_revision: Union[str, None] = None # Esta é a migração base
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Esta lógica assume que a tabela 'clientes' já existe e tem a coluna 'cpf'.
    # Se a tabela 'clientes' não existe ainda, esta operação falhará.

    # 1. Adicionar a nova coluna 'cpf_cnpj' como nullable=True (permitindo nulos temporariamente)
    op.add_column('clientes', sa.Column('cpf_cnpj', sa.String(length=14), nullable=True))

    # 2. Copiar os dados existentes da coluna 'cpf' para 'cpf_cnpj'
    # Isso é crucial para preencher os valores para as linhas já existentes
    op.execute("UPDATE clientes SET cpf_cnpj = cpf")

    # 3. Lidar com os nulos restantes (se houver linhas onde 'cpf' era nulo)
    # E 'cpf_cnpj' não pode ser nulo.
    # Usamos 'NAO_INFORMADO' como um valor padrão para nulos.
    op.execute("UPDATE clientes SET cpf_cnpj = 'NAO_INFORMADO' WHERE cpf_cnpj IS NULL")

    # 4. Alterar a coluna 'cpf_cnpj' para nullable=False (NOT NULL)
    op.alter_column('clientes', 'cpf_cnpj', existing_type=sa.String(length=14), nullable=False)

    # 5. Remover o índice antigo da coluna 'cpf' (se existir)
    # O Alembic pode ter criado um índice automaticamente, então tentamos remover.
    # Se não houver, esta linha pode ser comentada ou tratada com try/except.
    try:
        op.drop_index(op.f('ix_clientes_cpf'), table_name='clientes')
    except Exception:
        pass # Ignora se o índice não existe

    # 6. Criar o novo índice para a coluna 'cpf_cnpj'
    op.create_index(op.f('ix_clientes_cpf_cnpj'), 'clientes', ['cpf_cnpj'], unique=True)

    # 7. Remover a coluna 'cpf' antiga
    op.drop_column('clientes', 'cpf')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Reverte as operações do upgrade na ordem inversa

    # 1. Adicionar a coluna 'cpf' de volta (nullable=True temporariamente)
    op.add_column('clientes', sa.Column('cpf', sa.VARCHAR(length=11), autoincrement=False, nullable=True))

    # 2. Copiar os dados de 'cpf_cnpj' de volta para 'cpf'
    op.execute("UPDATE clientes SET cpf = cpf_cnpj")

    # 3. Alterar a coluna 'cpf' para nullable=False (se era assim originalmente)
    op.alter_column('clientes', 'cpf', existing_type=sa.VARCHAR(length=11), nullable=False)

    # 4. Remover o índice da coluna 'cpf_cnpj'
    op.drop_index(op.f('ix_clientes_cpf_cnpj'), table_name='clientes')

    # 5. Criar o índice antigo para a coluna 'cpf' (se existia)
    try:
        op.create_index(op.f('ix_clientes_cpf'), 'clientes', ['cpf'], unique=True)
    except Exception:
        pass # Ignora se o índice já existe ou não pode ser criado

    # 6. Remover a coluna 'cpf_cnpj'
    op.drop_column('clientes', 'cpf_cnpj')
    # ### end Alembic commands ###
